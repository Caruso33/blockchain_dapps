{
	"4": {
		"address": "0xDD70699afFBfA5410Fba4dAd11C0EBc1D2E7903B",
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "priceFeed_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "FundMe__CallFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FundMe__NotOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FundMe__SendMoreEth",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "funder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Funded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "funder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawn",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "MINIMUM_USD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fund",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "funder",
						"type": "address"
					}
				],
				"name": "getAddressToAmountFunded",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getFunder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFunders",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPriceFeed",
				"outputs": [
					{
						"internalType": "contract AggregatorV3Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"transactionHash": "0x628244f280ebf55fe6516c546a8cb4810f31ece1bb0e2cfd0dde935c9214b448",
		"receipt": {
			"to": null,
			"from": "0x4bFC74983D6338D3395A00118546614bB78472c2",
			"contractAddress": "0xDD70699afFBfA5410Fba4dAd11C0EBc1D2E7903B",
			"transactionIndex": 21,
			"gasUsed": "955641",
			"logsBloom": "0x
			"blockHash": "0x82820c361268d42eb4843651261db86e865a71b930f2bb3e70cb1ed82e4a8f40",
			"transactionHash": "0x628244f280ebf55fe6516c546a8cb4810f31ece1bb0e2cfd0dde935c9214b448",
			"logs": [],
			"blockNumber": 11011928,
			"cumulativeGasUsed": "8044348",
			"status": 1,
			"byzantium": true
		},
		"args": [
			"0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
		],
		"numDeployments": 2,
		"solcInputHash": "05b6aa606e746eb3f72360d5e2b018ec",
		"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__SendMoreEth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Tobias Leinss\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__SendMoreEth();\\nerror FundMe__NotOwner();\\nerror FundMe__CallFailed();\\n\\n/**\\n * @title A contract for crowdfunding\\n * @author Tobias Leinss\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 0.5 * 10**18; // 0.5 USD\\n\\n    event Funded(address indexed funder, uint256 amount);\\n    event Withdrawn(address indexed funder, uint256 amount);\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeed_) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeed_); // 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD)\\n            revert FundMe__SendMoreEth();\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n\\n        emit Funded(msg.sender, msg.value);\\n    }\\n\\n    // function getVersion() public view returns (uint256) {\\n    //     return priceFeed.version();\\n    // }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // 3 options:\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) revert FundMe__CallFailed();\\n\\n        emit Withdrawn(msg.sender, address(this).balance);\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders() external view returns (address[] memory) {\\n        return s_funders;\\n    }\\n\\n    function getFunder(uint256 index) external view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() external view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xf4bd38e70457a43b3812874ad11cecc64181489f73e09c5f251f4d05e226b8a3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// solidity-by-example.org/library\\n\\n// Libraries are similar to contracts, but you can't declare any state variable and you can't send ether.\\n// A library is embedded into the contract if all library functions are internal.\\n// Otherwise the library must be deployed and then linked before the contract is deployed.\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    // first param can be used like this:\\n    // msg.value.getConversionRate()\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xcf1dde360b1437d781f9add0c5543914b916c4bc46dc6b1e5164b6a26b9db17a\",\"license\":\"MIT\"}},\"version\":1}",
		"bytecode": "0x60a06040523480156200001157600080fd5b50604051620011583803806200115883398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051610fe6620001726000396000818161039a015261062d0152610fe66000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063d7b4750c1461016a578063ea63a044146101a75761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610928565b610350565b6040516100cc919061096e565b60405180910390f35b6100dd610398565b005b3480156100eb57600080fd5b506100f461061d565b604051610101919061096e565b60405180910390f35b34801561011657600080fd5b5061011f610629565b60405161012c9190610998565b60405180910390f35b34801561014157600080fd5b5061014a610651565b6040516101579190610a12565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b50610191600480360381019061018c9190610a59565b61067b565b60405161019e9190610998565b60405180910390f35b3480156101b357600080fd5b506101bc6106c3565b6040516101c99190610b44565b60405180910390f35b6706f05b59d3b20000610210600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461075190919063ffffffff16565b1015610248576040517f2eb792b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102969190610b95565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52434604051610346919061096e565b60405180910390a2565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c85760006001828154811061044357610442610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c090610c1a565b915050610420565b50600067ffffffffffffffff8111156104e4576104e3610c62565b5b6040519080825280602002602001820160405280156105125781602001602082028036833780820191505090505b506001908051906020019061052892919061081e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054f90610cc2565b60006040518083038185875af1925050503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50509050806105cc576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d547604051610612919061096e565b60405180910390a250565b6706f05b59d3b2000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061069157610690610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561074757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fd575b5050505050905090565b60008061075d8361078d565b90506000670de0b6b3a764000085836107769190610cd7565b6107809190610d60565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190610e1e565b5050509150506402540be400816108169190610e99565b915050919050565b828054828255906000526020600020908101928215610897579160200282015b828111156108965782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061083e565b5b5090506108a491906108a8565b5090565b5b808211156108c15760008160009055506001016108a9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108f5826108ca565b9050919050565b610905816108ea565b811461091057600080fd5b50565b600081359050610922816108fc565b92915050565b60006020828403121561093e5761093d6108c5565b5b600061094c84828501610913565b91505092915050565b6000819050919050565b61096881610955565b82525050565b6000602082019050610983600083018461095f565b92915050565b610992816108ea565b82525050565b60006020820190506109ad6000830184610989565b92915050565b6000819050919050565b60006109d86109d36109ce846108ca565b6109b3565b6108ca565b9050919050565b60006109ea826109bd565b9050919050565b60006109fc826109df565b9050919050565b610a0c816109f1565b82525050565b6000602082019050610a276000830184610a03565b92915050565b610a3681610955565b8114610a4157600080fd5b50565b600081359050610a5381610a2d565b92915050565b600060208284031215610a6f57610a6e6108c5565b5b6000610a7d84828501610a44565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610abb816108ea565b82525050565b6000610acd8383610ab2565b60208301905092915050565b6000602082019050919050565b6000610af182610a86565b610afb8185610a91565b9350610b0683610aa2565b8060005b83811015610b37578151610b1e8882610ac1565b9750610b2983610ad9565b925050600181019050610b0a565b5085935050505092915050565b60006020820190508181036000830152610b5e8184610ae6565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba082610955565b9150610bab83610955565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be057610bdf610b66565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c2582610955565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5757610c56610b66565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cac600083610c91565b9150610cb782610c9c565b600082019050919050565b6000610ccd82610c9f565b9150819050919050565b6000610ce282610955565b9150610ced83610955565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d2657610d25610b66565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6b82610955565b9150610d7683610955565b925082610d8657610d85610d31565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610db081610d91565b8114610dbb57600080fd5b50565b600081519050610dcd81610da7565b92915050565b6000819050919050565b610de681610dd3565b8114610df157600080fd5b50565b600081519050610e0381610ddd565b92915050565b600081519050610e1881610a2d565b92915050565b600080600080600060a08688031215610e3a57610e396108c5565b5b6000610e4888828901610dbe565b9550506020610e5988828901610df4565b9450506040610e6a88828901610e09565b9350506060610e7b88828901610e09565b9250506080610e8c88828901610dbe565b9150509295509295909350565b6000610ea482610dd3565b9150610eaf83610dd3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eee57610eed610b66565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f2b57610f2a610b66565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f6857610f67610b66565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fa557610fa4610b66565b5b82820290509291505056fea2646970667358221220cfbc9e2ffad73846ae083b4eb17eba3a3cc2c42eddd6ff80dbd9a564cbc53e7a64736f6c634300080e0033",
		"deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063d7b4750c1461016a578063ea63a044146101a75761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610928565b610350565b6040516100cc919061096e565b60405180910390f35b6100dd610398565b005b3480156100eb57600080fd5b506100f461061d565b604051610101919061096e565b60405180910390f35b34801561011657600080fd5b5061011f610629565b60405161012c9190610998565b60405180910390f35b34801561014157600080fd5b5061014a610651565b6040516101579190610a12565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b50610191600480360381019061018c9190610a59565b61067b565b60405161019e9190610998565b60405180910390f35b3480156101b357600080fd5b506101bc6106c3565b6040516101c99190610b44565b60405180910390f35b6706f05b59d3b20000610210600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461075190919063ffffffff16565b1015610248576040517f2eb792b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102969190610b95565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52434604051610346919061096e565b60405180910390a2565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c85760006001828154811061044357610442610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c090610c1a565b915050610420565b50600067ffffffffffffffff8111156104e4576104e3610c62565b5b6040519080825280602002602001820160405280156105125781602001602082028036833780820191505090505b506001908051906020019061052892919061081e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054f90610cc2565b60006040518083038185875af1925050503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50509050806105cc576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d547604051610612919061096e565b60405180910390a250565b6706f05b59d3b2000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061069157610690610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600180548060200260200160405190810160405280929190818152602001828054801561074757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106fd575b5050505050905090565b60008061075d8361078d565b90506000670de0b6b3a764000085836107769190610cd7565b6107809190610d60565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ff9190610e1e565b5050509150506402540be400816108169190610e99565b915050919050565b828054828255906000526020600020908101928215610897579160200282015b828111156108965782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061083e565b5b5090506108a491906108a8565b5090565b5b808211156108c15760008160009055506001016108a9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108f5826108ca565b9050919050565b610905816108ea565b811461091057600080fd5b50565b600081359050610922816108fc565b92915050565b60006020828403121561093e5761093d6108c5565b5b600061094c84828501610913565b91505092915050565b6000819050919050565b61096881610955565b82525050565b6000602082019050610983600083018461095f565b92915050565b610992816108ea565b82525050565b60006020820190506109ad6000830184610989565b92915050565b6000819050919050565b60006109d86109d36109ce846108ca565b6109b3565b6108ca565b9050919050565b60006109ea826109bd565b9050919050565b60006109fc826109df565b9050919050565b610a0c816109f1565b82525050565b6000602082019050610a276000830184610a03565b92915050565b610a3681610955565b8114610a4157600080fd5b50565b600081359050610a5381610a2d565b92915050565b600060208284031215610a6f57610a6e6108c5565b5b6000610a7d84828501610a44565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610abb816108ea565b82525050565b6000610acd8383610ab2565b60208301905092915050565b6000602082019050919050565b6000610af182610a86565b610afb8185610a91565b9350610b0683610aa2565b8060005b83811015610b37578151610b1e8882610ac1565b9750610b2983610ad9565b925050600181019050610b0a565b5085935050505092915050565b60006020820190508181036000830152610b5e8184610ae6565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba082610955565b9150610bab83610955565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be057610bdf610b66565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c2582610955565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5757610c56610b66565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cac600083610c91565b9150610cb782610c9c565b600082019050919050565b6000610ccd82610c9f565b9150819050919050565b6000610ce282610955565b9150610ced83610955565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d2657610d25610b66565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6b82610955565b9150610d7683610955565b925082610d8657610d85610d31565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610db081610d91565b8114610dbb57600080fd5b50565b600081519050610dcd81610da7565b92915050565b6000819050919050565b610de681610dd3565b8114610df157600080fd5b50565b600081519050610e0381610ddd565b92915050565b600081519050610e1881610a2d565b92915050565b600080600080600060a08688031215610e3a57610e396108c5565b5b6000610e4888828901610dbe565b9550506020610e5988828901610df4565b9450506040610e6a88828901610e09565b9350506060610e7b88828901610e09565b9250506080610e8c88828901610dbe565b9150509295509295909350565b6000610ea482610dd3565b9150610eaf83610dd3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eee57610eed610b66565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f2b57610f2a610b66565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f6857610f67610b66565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fa557610fa4610b66565b5b82820290509291505056fea2646970667358221220cfbc9e2ffad73846ae083b4eb17eba3a3cc2c42eddd6ff80dbd9a564cbc53e7a64736f6c634300080e0033",
		"devdoc": {
			"author": "Tobias Leinss",
			"kind": "dev",
			"methods": {},
			"title": "A contract for crowdfunding",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		},
		"storageLayout": {
			"storage": [
				{
					"astId": 64,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "s_addressToAmountFunded",
					"offset": 0,
					"slot": "0",
					"type": "t_mapping(t_address,t_uint256)"
				},
				{
					"astId": 67,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "s_funders",
					"offset": 0,
					"slot": "1",
					"type": "t_array(t_address)dyn_storage"
				},
				{
					"astId": 91,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "s_priceFeed",
					"offset": 0,
					"slot": "2",
					"type": "t_contract(AggregatorV3Interface)45"
				}
			],
			"types": {
				"t_address": {
					"encoding": "inplace",
					"label": "address",
					"numberOfBytes": "20"
				},
				"t_array(t_address)dyn_storage": {
					"base": "t_address",
					"encoding": "dynamic_array",
					"label": "address[]",
					"numberOfBytes": "32"
				},
				"t_contract(AggregatorV3Interface)45": {
					"encoding": "inplace",
					"label": "contract AggregatorV3Interface",
					"numberOfBytes": "20"
				},
				"t_mapping(t_address,t_uint256)": {
					"encoding": "mapping",
					"key": "t_address",
					"label": "mapping(address => uint256)",
					"numberOfBytes": "32",
					"value": "t_uint256"
				},
				"t_uint256": {
					"encoding": "inplace",
					"label": "uint256",
					"numberOfBytes": "32"
				}
			}
		}
	},
	"1337": {
		"address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "priceFeed_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "NotOwner",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "funder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Funded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "funder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawn",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "MINIMUM_USD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "addressToAmountFunded",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fund",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "funders",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFunders",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "priceFeed",
				"outputs": [
					{
						"internalType": "contract AggregatorV3Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"transactionHash": "0x3ebcde6643ed4c0739e1322737fe9825174babe8176427d3647700017f4c0f42",
		"receipt": {
			"to": null,
			"from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
			"contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
			"transactionIndex": 0,
			"gasUsed": "995441",
			"logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"blockHash": "0x342935a102fb035a62faa0ca8f9e2eda25ed8dd8b7cb59a1acf3b87d870f7a06",
			"transactionHash": "0x3ebcde6643ed4c0739e1322737fe9825174babe8176427d3647700017f4c0f42",
			"logs": [],
			"blockNumber": 2,
			"cumulativeGasUsed": "995441",
			"status": 1,
			"byzantium": true
		},
		"args": [
			"0x5FbDB2315678afecb367f032d93F642f64180aa3"
		],
		"numDeployments": 1,
		"solcInputHash": "465a8d11d166c70df4b5891d41678056",
		"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 0.5 * 10**18; // 0.5 USD\\n\\n    event Funded(address indexed funder, uint256 amount);\\n    event Withdrawn(address indexed funder, uint256 amount);\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeed_) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeed_); // 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n\\n        emit Funded(msg.sender, msg.value);\\n    }\\n\\n    // function getVersion() public view returns (uint256) {\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getFunders() external view returns (address[] memory) {\\n        return funders;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // 3 options:\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n\\n        emit Withdrawn(msg.sender, address(this).balance);\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xe8d5f6c2cbdf57482f45d5569a784f2ac3631f25d95ca005261a3b6547cf7226\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// solidity-by-example.org/library\\n\\n// Libraries are similar to contracts, but you can't declare any state variable and you can't send ether.\\n// A library is embedded into the contract if all library functions are internal.\\n// Otherwise the library must be deployed and then linked before the contract is deployed.\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    // first param can be used like this:\\n    // msg.value.getConversionRate()\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xcf1dde360b1437d781f9add0c5543914b916c4bc46dc6b1e5164b6a26b9db17a\",\"license\":\"MIT\"}},\"version\":1}",
		"bytecode": "0x60a06040523480156200001157600080fd5b50604051620012123803806200121283398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110a0620001726000396000818161035b015261063301526110a06000f3fe60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610135578063dba6335f1461013f578063dc0d3dff1461016a578063ea63a044146101a75761008e565b80633ccfd60b146100985780633e47d6f3146100a25780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b6100a0610359565b005b3480156100ae57600080fd5b506100c960048036038101906100c491906108f9565b6105e7565b6040516100d6919061093f565b60405180910390f35b3480156100eb57600080fd5b506100f46105ff565b604051610101919061093f565b60405180910390f35b34801561011657600080fd5b5061011f61060b565b60405161012c91906109b9565b60405180910390f35b61013d6101d2565b005b34801561014b57600080fd5b50610154610631565b60405161016191906109e3565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190610a2a565b610655565b60405161019e91906109e3565b60405180910390f35b3480156101b357600080fd5b506101bc610694565b6040516101c99190610b15565b60405180910390f35b6706f05b59d3b20000610210600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072290919063ffffffff16565b1015610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024890610b94565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610be3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161034f919061093f565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103de576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104895760006001828154811061040457610403610c39565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048190610c68565b9150506103e1565b50600067ffffffffffffffff8111156104a5576104a4610cb0565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600190805190602001906104e99291906107ef565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051090610d10565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b5050905080610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610d71565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5476040516105dc919061093f565b60405180910390a250565b60006020528060005260406000206000915090505481565b6706f05b59d3b2000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061066557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600180548060200260200160405190810160405280929190818152602001828054801561071857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ce575b5050505050905090565b60008061072e8361075e565b90506000670de0b6b3a764000085836107479190610d91565b6107519190610e1a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190610ed8565b5050509150506402540be400816107e79190610f53565b915050919050565b828054828255906000526020600020908101928215610868579160200282015b828111156108675782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080f565b5b5090506108759190610879565b5090565b5b8082111561089257600081600090555060010161087a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610896565b5b600061091d848285016108e4565b91505092915050565b6000819050919050565b61093981610926565b82525050565b60006020820190506109546000830184610930565b92915050565b6000819050919050565b600061097f61097a6109758461089b565b61095a565b61089b565b9050919050565b600061099182610964565b9050919050565b60006109a382610986565b9050919050565b6109b381610998565b82525050565b60006020820190506109ce60008301846109aa565b92915050565b6109dd816108bb565b82525050565b60006020820190506109f860008301846109d4565b92915050565b610a0781610926565b8114610a1257600080fd5b50565b600081359050610a24816109fe565b92915050565b600060208284031215610a4057610a3f610896565b5b6000610a4e84828501610a15565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a8c816108bb565b82525050565b6000610a9e8383610a83565b60208301905092915050565b6000602082019050919050565b6000610ac282610a57565b610acc8185610a62565b9350610ad783610a73565b8060005b83811015610b08578151610aef8882610a92565b9750610afa83610aaa565b925050600181019050610adb565b5085935050505092915050565b60006020820190508181036000830152610b2f8184610ab7565b905092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b7e601b83610b37565b9150610b8982610b48565b602082019050919050565b60006020820190508181036000830152610bad81610b71565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bee82610926565b9150610bf983610926565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2e57610c2d610bb4565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c7382610926565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ca557610ca4610bb4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cfa600083610cdf565b9150610d0582610cea565b600082019050919050565b6000610d1b82610ced565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5b600b83610b37565b9150610d6682610d25565b602082019050919050565b60006020820190508181036000830152610d8a81610d4e565b9050919050565b6000610d9c82610926565b9150610da783610926565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de057610ddf610bb4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2582610926565b9150610e3083610926565b925082610e4057610e3f610deb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6a81610e4b565b8114610e7557600080fd5b50565b600081519050610e8781610e61565b92915050565b6000819050919050565b610ea081610e8d565b8114610eab57600080fd5b50565b600081519050610ebd81610e97565b92915050565b600081519050610ed2816109fe565b92915050565b600080600080600060a08688031215610ef457610ef3610896565b5b6000610f0288828901610e78565b9550506020610f1388828901610eae565b9450506040610f2488828901610ec3565b9350506060610f3588828901610ec3565b9250506080610f4688828901610e78565b9150509295509295909350565b6000610f5e82610e8d565b9150610f6983610e8d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa857610fa7610bb4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe557610fe4610bb4565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102257611021610bb4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105f5761105e610bb4565b5b82820290509291505056fea26469706673582212206b118a78562beebe110a4f18932c843f02f4a19aa6af1c24cdc2b08b16d4ef0664736f6c634300080e0033",
		"deployedBytecode": "0x60806040526004361061007f5760003560e01c8063b60d42881161004e578063b60d428814610135578063dba6335f1461013f578063dc0d3dff1461016a578063ea63a044146101a75761008e565b80633ccfd60b146100985780633e47d6f3146100a25780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b6100a0610359565b005b3480156100ae57600080fd5b506100c960048036038101906100c491906108f9565b6105e7565b6040516100d6919061093f565b60405180910390f35b3480156100eb57600080fd5b506100f46105ff565b604051610101919061093f565b60405180910390f35b34801561011657600080fd5b5061011f61060b565b60405161012c91906109b9565b60405180910390f35b61013d6101d2565b005b34801561014b57600080fd5b50610154610631565b60405161016191906109e3565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190610a2a565b610655565b60405161019e91906109e3565b60405180910390f35b3480156101b357600080fd5b506101bc610694565b6040516101c99190610b15565b60405180910390f35b6706f05b59d3b20000610210600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461072290919063ffffffff16565b1015610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024890610b94565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610be3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161034f919061093f565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103de576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104895760006001828154811061040457610403610c39565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048190610c68565b9150506103e1565b50600067ffffffffffffffff8111156104a5576104a4610cb0565b5b6040519080825280602002602001820160405280156104d35781602001602082028036833780820191505090505b50600190805190602001906104e99291906107ef565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051090610d10565b60006040518083038185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b5050905080610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90610d71565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5476040516105dc919061093f565b60405180910390a250565b60006020528060005260406000206000915090505481565b6706f05b59d3b2000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061066557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600180548060200260200160405190810160405280929190818152602001828054801561071857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ce575b5050505050905090565b60008061072e8361075e565b90506000670de0b6b3a764000085836107479190610d91565b6107519190610e1a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190610ed8565b5050509150506402540be400816107e79190610f53565b915050919050565b828054828255906000526020600020908101928215610868579160200282015b828111156108675782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061080f565b5b5090506108759190610879565b5090565b5b8082111561089257600081600090555060010161087a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610896565b5b600061091d848285016108e4565b91505092915050565b6000819050919050565b61093981610926565b82525050565b60006020820190506109546000830184610930565b92915050565b6000819050919050565b600061097f61097a6109758461089b565b61095a565b61089b565b9050919050565b600061099182610964565b9050919050565b60006109a382610986565b9050919050565b6109b381610998565b82525050565b60006020820190506109ce60008301846109aa565b92915050565b6109dd816108bb565b82525050565b60006020820190506109f860008301846109d4565b92915050565b610a0781610926565b8114610a1257600080fd5b50565b600081359050610a24816109fe565b92915050565b600060208284031215610a4057610a3f610896565b5b6000610a4e84828501610a15565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a8c816108bb565b82525050565b6000610a9e8383610a83565b60208301905092915050565b6000602082019050919050565b6000610ac282610a57565b610acc8185610a62565b9350610ad783610a73565b8060005b83811015610b08578151610aef8882610a92565b9750610afa83610aaa565b925050600181019050610adb565b5085935050505092915050565b60006020820190508181036000830152610b2f8184610ab7565b905092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b7e601b83610b37565b9150610b8982610b48565b602082019050919050565b60006020820190508181036000830152610bad81610b71565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bee82610926565b9150610bf983610926565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2e57610c2d610bb4565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c7382610926565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ca557610ca4610bb4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cfa600083610cdf565b9150610d0582610cea565b600082019050919050565b6000610d1b82610ced565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d5b600b83610b37565b9150610d6682610d25565b602082019050919050565b60006020820190508181036000830152610d8a81610d4e565b9050919050565b6000610d9c82610926565b9150610da783610926565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de057610ddf610bb4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e2582610926565b9150610e3083610926565b925082610e4057610e3f610deb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6a81610e4b565b8114610e7557600080fd5b50565b600081519050610e8781610e61565b92915050565b6000819050919050565b610ea081610e8d565b8114610eab57600080fd5b50565b600081519050610ebd81610e97565b92915050565b600081519050610ed2816109fe565b92915050565b600080600080600060a08688031215610ef457610ef3610896565b5b6000610f0288828901610e78565b9550506020610f1388828901610eae565b9450506040610f2488828901610ec3565b9350506060610f3588828901610ec3565b9250506080610f4688828901610e78565b9150509295509295909350565b6000610f5e82610e8d565b9150610f6983610e8d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fa857610fa7610bb4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fe557610fe4610bb4565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561102257611021610bb4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561105f5761105e610bb4565b5b82820290509291505056fea26469706673582212206b118a78562beebe110a4f18932c843f02f4a19aa6af1c24cdc2b08b16d4ef0664736f6c634300080e0033",
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		},
		"storageLayout": {
			"storage": [
				{
					"astId": 59,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "addressToAmountFunded",
					"offset": 0,
					"slot": "0",
					"type": "t_mapping(t_address,t_uint256)"
				},
				{
					"astId": 62,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "funders",
					"offset": 0,
					"slot": "1",
					"type": "t_array(t_address)dyn_storage"
				},
				{
					"astId": 86,
					"contract": "contracts/FundMe.sol:FundMe",
					"label": "priceFeed",
					"offset": 0,
					"slot": "2",
					"type": "t_contract(AggregatorV3Interface)45"
				}
			],
			"types": {
				"t_address": {
					"encoding": "inplace",
					"label": "address",
					"numberOfBytes": "20"
				},
				"t_array(t_address)dyn_storage": {
					"base": "t_address",
					"encoding": "dynamic_array",
					"label": "address[]",
					"numberOfBytes": "32"
				},
				"t_contract(AggregatorV3Interface)45": {
					"encoding": "inplace",
					"label": "contract AggregatorV3Interface",
					"numberOfBytes": "20"
				},
				"t_mapping(t_address,t_uint256)": {
					"encoding": "mapping",
					"key": "t_address",
					"label": "mapping(address => uint256)",
					"numberOfBytes": "32",
					"value": "t_uint256"
				},
				"t_uint256": {
					"encoding": "inplace",
					"label": "uint256",
					"numberOfBytes": "32"
				}
			}
		}
	}
}